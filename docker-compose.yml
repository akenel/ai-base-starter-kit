services:
  n8n:
    build:
      context: ./n8n
      dockerfile: Dockerfile.n8n
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=${DB_TYPE}
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
    volumes:
      - "./data:/home/node/.n8n"
    restart: always
    networks:
      - ai_network

  postgres:
    build:
      context: ./postgres  # ✅ Use relative path, avoid ${PWD}
      dockerfile: Dockerfile.postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_POSTGRESDB_USER}
      - POSTGRES_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - POSTGRES_DB=${DB_POSTGRESDB_DATABASE}
    volumes:
      - "./data:/var/lib/postgresql/data"
      - "./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql"  # ✅ Ensure init.sql is mounted
    restart: always
    networks:
      - ai_network

  ollama:
    build:
      context: ./ollama  # ✅ Fix path
      dockerfile: Dockerfile.ollama
    container_name: ollama-cpu
    ports:
      - "11434:11434"
    volumes:
      - "./data:/root/.ollama"
    environment:
      - MODEL=${OLLAMA_MODEL}
    restart: always
    networks:
      - ai_network

networks:
  ai_network:
    driver: bridge
